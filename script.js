// ... (C√°c ph·∫ßn kh√°c gi·ªØ nguy√™n) ...

// --- H√†m Kh·ªüi t·∫°o Game ---
function initializeGame(size) {
    boardSize = size;
    // ƒêi·ªÅu ch·ªânh ƒëi·ªÅu ki·ªán th·∫Øng d·ª±a tr√™n k√≠ch th∆∞·ªõc (ph·ªï bi·∫øn nh·∫•t l√† 5)
    if (size <= 4) { // Th√™m ƒëi·ªÅu ki·ªán <= 4 cho 3x3 v√† 4x4
        winCondition = size; // Th·∫Øng c·∫ßn s·ªë l∆∞·ª£ng = k√≠ch th∆∞·ªõc b·∫£ng
    } else {
        winCondition = 5; // Gomoku rule for 5x5 and larger
    }

    // Reset tr·∫°ng th√°i
    board = Array(boardSize).fill(null).map(() => Array(boardSize).fill(''));
    currentPlayer = 'X';
    gameActive = true;
    statusElement.textContent = `L∆∞·ª£t c·ªßa ${currentPlayer}`; // ƒê·∫∑t l·∫°i th√¥ng b√°o khi b·∫Øt ƒë·∫ßu

    // X√≥a c√°c √¥ c≈© v√† t·∫°o b·∫£ng m·ªõi
    boardElement.innerHTML = '';
    boardElement.style.gridTemplateColumns = `repeat(${boardSize}, 1fr)`;

    // --- C·∫≠p nh·∫≠t Class ƒëi·ªÅu ch·ªânh font size ---
    boardElement.classList.remove('size-tiny', 'size-small', 'size-medium', 'size-large'); // X√≥a h·∫øt class c≈©
    if (boardSize <= 4) {
        boardElement.classList.add('size-tiny');
    } else if (boardSize <= 8) {
        boardElement.classList.add('size-small');
    } else if (boardSize <= 14) {
        boardElement.classList.add('size-medium');
    } else {
        boardElement.classList.add('size-large');
    }
    // ------------------------------------------

    for (let row = 0; row < boardSize; row++) {
        for (let col = 0; col < boardSize; col++) {
            const cell = document.createElement('div');
            cell.classList.add('cell');
            cell.dataset.row = row;
            cell.dataset.col = col;
            cell.addEventListener('click', handleCellClick);
            boardElement.appendChild(cell);
        }
    }
    // ·∫®n khu v·ª±c game n·∫øu ch∆∞a ch·ªçn size l·∫ßn ƒë·∫ßu (t√πy ch·ªçn)
    document.querySelector('.game-area').style.display = 'flex'; // Hi·ªÉn th·ªã khi game b·∫Øt ƒë·∫ßu
}

// --- (T√πy ch·ªçn) ·∫®n khu v·ª±c game ban ƒë·∫ßu ---
// Th√™m d√≤ng n√†y v√†o cu·ªëi file JS ƒë·ªÉ ·∫©n game area khi m·ªõi t·∫£i trang
// document.addEventListener('DOMContentLoaded', () => {
//     document.querySelector('.game-area').style.display = 'none';
// });


// --- H√†m k·∫øt th√∫c Game ---
function endGame(isDraw) {
    gameActive = false;
    if (isDraw) {
        statusElement.textContent = "H√≤a! ü§ù"; // Th√™m icon
        statusElement.style.color = var(--secondary-color); // ƒê·ªïi m√†u tr·∫°ng th√°i h√≤a
    } else {
        // ƒê·∫∑t m√†u theo ng∆∞·ªùi th·∫Øng
        const winnerColor = currentPlayer === 'X' ? 'var(--player-x-color)' : 'var(--player-o-color)';
        statusElement.innerHTML = `Ng∆∞·ªùi ch∆°i <span style="color: ${winnerColor}; font-weight: 700;">${currentPlayer}</span> th·∫Øng! üéâ`; // Th√™m icon v√† highlight ng∆∞·ªùi th·∫Øng
    }
}


// --- G·∫Øn Event Listeners ---
resetButton.addEventListener('click', () => {
    // Ki·ªÉm tra xem ƒë√£ c√≥ k√≠ch th∆∞·ªõc h·ª£p l·ªá ch∆∞a
    if(boardSize >= 3 && boardSize <= 20) {
        initializeGame(boardSize);
    } else {
        // C√≥ th·ªÉ ƒë·∫∑t l·∫°i v·ªÅ k√≠ch th∆∞·ªõc m·∫∑c ƒë·ªãnh n·∫øu mu·ªën
        initializeGame(10); // Ho·∫∑c hi·ªÉn th·ªã th√¥ng b√°o y√™u c·∫ßu ch·ªçn size
        statusElement.textContent = "Vui l√≤ng ch·ªçn k√≠ch th∆∞·ªõc ƒë·ªÉ b·∫Øt ƒë·∫ßu.";
    }
});

startCustomSizeButton.addEventListener('click', () => {
    const size = parseInt(customSizeInput.value);
    if (size >= 3 && size <= 20) {
        initializeGame(size);
    } else {
        alert("K√≠ch th∆∞·ªõc kh√¥ng h·ª£p l·ªá! Vui l√≤ng ch·ªçn t·ª´ 3 ƒë·∫øn 20.");
        customSizeInput.focus(); // Focus l·∫°i v√†o √¥ input
    }
});

presetSizeButtons.forEach(button => {
    button.addEventListener('click', () => {
        const size = parseInt(button.dataset.size);
        customSizeInput.value = size; // ƒê·ªìng b·ªô input
        initializeGame(size);
    });
});

// --- Kh·ªüi t·∫°o game l·∫ßn ƒë·∫ßu (ho·∫∑c kh√¥ng l√†m g√¨, ƒë·ªÉ ng∆∞·ªùi d√πng ch·ªçn) ---
// B·ªè d√≤ng initializeGame(10) ·ªü ƒë√¢y ƒë·ªÉ ng∆∞·ªùi d√πng ph·∫£i ch·ªçn k√≠ch th∆∞·ªõc tr∆∞·ªõc
// N·∫øu mu·ªën c√≥ b·∫£ng m·∫∑c ƒë·ªãnh, h√£y gi·ªØ l·∫°i initializeGame(10);
statusElement.textContent = "Ch·ªçn k√≠ch th∆∞·ªõc b·∫£ng ƒë·ªÉ b·∫Øt ƒë·∫ßu ch∆°i!"; // Th√¥ng b√°o ban ƒë·∫ßu r√µ r√†ng h∆°n

// (T√πy ch·ªçn) G·ªçi h√†m ·∫©n khu v·ª±c game n·∫øu b·∫°n ƒë√£ th√™m event listener DOMContentLoaded
// document.querySelector('.game-area').style.display = 'none';